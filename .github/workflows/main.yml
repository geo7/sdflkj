name: CI

on: [push]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # pylint:
  #   name: Pylint2
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: ['3.8', '3.9', '3.10']
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install pylint
  #     - name: Run pylint
  #       run: |
  #         pylint $(git ls-files '*.py')
  python-package:
    name: "Linting and tests"
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pre-commit
        id: install-pre-commit
        run: |
          pip install --constraint=.github/workflows/constraints.txt pip
          pip install --constraint=.github/workflows/constraints.txt pre-commit

      - name: Compute pre-commit cache key
        id: pre-commit-cache
        shell: python
        run: |
          import hashlib
          import sys
          python = "py{}.{}".format(*sys.version_info[:2])
          payload = sys.version.encode() + sys.executable.encode()
          digest = hashlib.sha256(payload).hexdigest()
          result = "${{ runner.os }}-{}-{}-pre-commit".format(python, digest[:8])
          print("::set-output name=result::{}".format(result))

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: ${{ steps.cache_key_prefix.outputs.result }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ steps.pre-commit-cache.outputs.result }}-
      - run: pre-commit run --all-files --show-diff-on-failure --color=always


      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest pylint
          # I should break these out into dev/test etc really.
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: "Test with pytest"
        run: |
          pytest

      - name: "Check code with Pylint"
        run: |
          pylint $(git ls-files '*.py')
