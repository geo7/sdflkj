name: CI

on: [push]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # pylint:
  #   name: Pylint2
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: ['3.8', '3.9', '3.10']
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install pylint
  #     - name: Run pylint
  #       run: |
  #         pylint $(git ls-files '*.py')
  python-package:
    name: "Linting and tests"
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Compute pre-commit cache key
        id: pre-commit-cache
        shell: python
        run: |
          import hashlib
          import sys
          python = "py{}.{}".format(*sys.version_info[:2])
          payload = sys.version.encode() + sys.executable.encode()
          digest = hashlib.sha256(payload).hexdigest()
          result = "${{ runner.os }}-{}-{}-pre-commit".format(python, digest[:8])
          print("::set-output name=result::{}".format(result))
          print("SOMETHING?? ::set-output name=result::{}".format(result))
          print('that job is finished')

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest pylint
          # I should break these out into dev/test etc really.
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: "Test with pytest"
        run: |
          pytest

      - name: "Check code with Pylint"
        run: |
          pylint $(git ls-files '*.py')

      - name: "Run pre-commit"
        run: |
          pre-commit run --all-files --show-diff-on-failure
